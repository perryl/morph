#!/bin/bash
#
# Copyright (C) 2012-2014  Codethink Limited
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


## Make sure "morph build" works anywhere in a workspace or system branch
## and produces the same results every time.

# FIXME: This seems to break because the new "morph edit" makes correct
# changes to build-dependencies, which breaks the old "morph build".
# Disable test now, re-enable it after "morph build" is fixed. --liw
exit 0

set -eu

source "$SRCDIR/tests.as-root/setup-build"

# Build from the workspace root.
cd "$DATADIR/workspace"
"$SRCDIR/scripts/test-morph" build linux-system
"$SRCDIR/scripts/list-tree" "$DATADIR/cache/artifacts" > "$DATADIR/output1"
rm -rf "$DATADIR/cache"/*

# Build from the branch.
cd "$DATADIR/workspace/branch1"
"$SRCDIR/scripts/test-morph" build linux-system
"$SRCDIR/scripts/list-tree" "$DATADIR/cache/artifacts" > "$DATADIR/output2"
rm -rf "$DATADIR/cache/artifacts"/*

# Build form the branch root repository.
cd "$DATADIR/workspace/branch1/test/morphs"
"$SRCDIR/scripts/test-morph" build linux-system
"$SRCDIR/scripts/list-tree" "$DATADIR/cache/artifacts" > "$DATADIR/output3"
rm -rf "$DATADIR/cache/artifacts"/*

# Build from the linux directory.
cd "$DATADIR/workspace/branch1/test/kernel-repo"
"$SRCDIR/scripts/test-morph" build linux-system
"$SRCDIR/scripts/list-tree" "$DATADIR/cache/artifacts" > "$DATADIR/output4"
rm -rf "$DATADIR/cache/artifacts"/*

# Verify that we build the right number of artifacts
[ $(wc < "$DATADIR/output1" -l) -eq 22 ]

# List of files in the artifact cache should be identical after each build
diff "$DATADIR/output1" "$DATADIR/output2"
diff "$DATADIR/output2" "$DATADIR/output3"
diff "$DATADIR/output3" "$DATADIR/output4"
